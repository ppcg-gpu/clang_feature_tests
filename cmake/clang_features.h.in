#ifndef CLANG_FEATURES_H
#define CLANG_FEATURES_H

/* Define if HeaderSearchOptions::AddPath takes 4 arguments */
#cmakedefine ADDPATH_TAKES_4_ARGUMENTS

/* Clang installation prefix */
#cmakedefine CLANG_PREFIX "@CLANG_PREFIX@"

/* Define if CompilerInstance::createDiagnostics takes argc and argv */
#cmakedefine CREATEDIAGNOSTICS_TAKES_ARG

/* Define if CompilerInstance::createPreprocessor takes TranslationUnitKind */
#cmakedefine CREATEPREPROCESSOR_TAKES_TUKIND

/* Define if TargetInfo::CreateTargetInfo takes pointer */
#cmakedefine CREATETARGETINFO_TAKES_POINTER

/* Define if TargetInfo::CreateTargetInfo takes shared_ptr */
#cmakedefine CREATETARGETINFO_TAKES_SHARED_PTR

/* Define if CompilerInvocation::CreateFromArgs takes ArrayRef */
#cmakedefine CREATE_FROM_ARGS_TAKES_ARRAYREF

/* Define if Driver constructor takes default image name */
#cmakedefine DRIVER_CTOR_TAKES_DEFAULTIMAGENAME

/* Define to DiagnosticClient for older versions of clang */
#cmakedefine DiagnosticConsumer @DiagnosticConsumer@

/* Define to Diagnostic for newer versions of clang */
#cmakedefine DiagnosticInfo @DiagnosticInfo@

/* Define to Diagnostic for older versions of clang */
#cmakedefine DiagnosticsEngine @DiagnosticsEngine@

/* Define if getTypeInfo returns TypeInfo object */
#cmakedefine GETTYPEINFORETURNSTYPEINFO

/* Define if llvm/ADT/OwningPtr.h exists */
#cmakedefine HAVE_ADT_OWNINGPTR_H

/* Define if clang/Basic/DiagnosticOptions.h exists */
#cmakedefine HAVE_BASIC_DIAGNOSTICOPTIONS_H

/* Define if getBeginLoc and getEndLoc should be used */
#cmakedefine HAVE_BEGIN_END_LOC

/* Define if clang/Basic/LangStandard.h exists */
#cmakedefine HAVE_CLANG_BASIC_LANGSTANDARD_H

/* Define if Driver constructor takes CXXIsProduction argument */
#cmakedefine HAVE_CXXISPRODUCTION

/* Define if DecayedType is defined */
#cmakedefine HAVE_DECAYEDTYPE

/* Define if SourceManager has findLocationAfterToken method */
#cmakedefine HAVE_FINDLOCATIONAFTERTOKEN

/* Define if Driver constructor takes IsProduction argument */
#cmakedefine HAVE_ISPRODUCTION

/* Define if clang/Lex/HeaderSearchOptions.h exists */
#cmakedefine HAVE_LEX_HEADERSEARCHOPTIONS_H

/* Define if clang/Lex/PreprocessorOptions.h exists */
#cmakedefine HAVE_LEX_PREPROCESSOROPTIONS_H

/* Define if llvm/Option/Arg.h exists */
#cmakedefine HAVE_LLVM_OPTION_ARG_H

/* Define if SourceManager has a setMainFileID method */
#cmakedefine HAVE_SETMAINFILEID

/* Define if DiagnosticsEngine::setDiagnosticGroupWarningAsError is available */
#cmakedefine HAVE_SET_DIAGNOSTIC_GROUP_WARNING_AS_ERROR

/* Define if StmtRange class is available */
#cmakedefine HAVE_STMTRANGE

/* Define if llvm/TargetParser/Host.h exists */
#cmakedefine HAVE_TARGETPARSER_HOST_H

/* Define if SourceManager has translateLineCol method */
#cmakedefine HAVE_TRANSLATELINECOL

/* Return type of HandleTopLevelDeclReturn */
#cmakedefine HandleTopLevelDeclContinue @HandleTopLevelDeclContinue@

/* Return type of HandleTopLevelDeclReturn */
#cmakedefine HandleTopLevelDeclReturn @HandleTopLevelDeclReturn@

/* Define to Language::C or InputKind::C for newer versions of clang */
#cmakedefine IK_C @IK_C@

/* Define to PragmaIntroducerKind for older versions of clang */
#cmakedefine PragmaIntroducer @PragmaIntroducer@

/* Defined if CompilerInstance::setInvocation takes a shared_ptr */
#cmakedefine SETINVOCATION_TAKES_SHARED_PTR

/* Define to class with setLangDefaults method */
#cmakedefine SETLANGDEFAULTS @SETLANGDEFAULTS@

/* Define if CompilerInvocation::setLangDefaults takes 5 arguments */
#cmakedefine SETLANGDEFAULTS_TAKES_5_ARGUMENTS

/* Define to TypedefDecl for older versions of clang */
#cmakedefine TypedefNameDecl @TypedefNameDecl@

/* Define if Driver::BuildCompilation takes ArrayRef */
#cmakedefine USE_ARRAYREF

/* Define if ArraySizeModifier appears inside ArrayType */
#cmakedefine USE_NESTED_ARRAY_SIZE_MODIFIER

/* Define to ext_implicit_function_decl for older versions of clang */
#cmakedefine ext_implicit_function_decl_c99 @ext_implicit_function_decl_c99@

/* Define to getHostTriple for older versions of clang */
#cmakedefine getDefaultTargetTriple @getDefaultTargetTriple@

/* Define to getInstantiationColumnNumber for older versions of clang */
#cmakedefine getExpansionColumnNumber @getExpansionColumnNumber@

/* Define to getInstantiationLineNumber for older versions of clang */
#cmakedefine getExpansionLineNumber @getExpansionLineNumber@

/* Define to getInstantiationLoc for older versions of clang */
#cmakedefine getExpansionLoc @getExpansionLoc@

/* Define to getImmediateInstantiationRange for older versions of clang */
#cmakedefine getImmediateExpansionRange @getImmediateExpansionRange@

/* Define to getLangOptions for older versions of clang */
#cmakedefine getLangOpts @getLangOpts@

/* Define to getFileLocWithOffset for older versions of clang */
#cmakedefine getLocWithOffset @getLocWithOffset@

/* Define to getNumParams for newer versions of clang */
#cmakedefine getNumArgs @getNumArgs@

/* Define to getParamType for newer versions of clang */
#cmakedefine getArgType @getArgType@

/* Define to getResultType for older versions of clang */
#cmakedefine getReturnType @getReturnType@

/* Define to getTypedefForAnonDecl for older versions of clang */
#cmakedefine getTypedefNameForAnonDecl @getTypedefNameForAnonDecl@

/* Define to InitializeBuiltins for older versions of clang */
#cmakedefine initializeBuiltins @initializeBuiltins@

#endif /* CLANG_FEATURES_H */
